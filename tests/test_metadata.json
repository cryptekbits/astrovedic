{
    "tests.test_chart.ChartTests.test_solar_return_hsys": {
        "name": "Solar Return House System",
        "description": "Tests that solar return charts maintain the original house system",
        "category": "core"
    },
    "tests.test_factory.FactoryTests.test_create_fixed_star": {
        "name": "Create Fixed Star",
        "description": "Tests creation of fixed star objects",
        "category": "core"
    },
    "tests.test_factory.FactoryTests.test_create_house": {
        "name": "Create House",
        "description": "Tests creation of house objects",
        "category": "core"
    },
    "tests.test_factory.FactoryTests.test_create_object_with_complete_data": {
        "name": "Create Object with Complete Data",
        "description": "Tests creation of objects with complete data",
        "category": "core"
    },
    "tests.test_factory.FactoryTests.test_create_object_with_empty_data": {
        "name": "Create Object with Empty Data",
        "description": "Tests creation of objects with empty data and verifies error handling",
        "category": "core"
    },
    "tests.test_factory.FactoryTests.test_create_object_with_missing_data": {
        "name": "Create Object with Missing Data",
        "description": "Tests creation of objects with missing required attributes and verifies error handling",
        "category": "core"
    },
    "tests.test_factory.FactoryTests.test_get_object_class": {
        "name": "Get Object Class",
        "description": "Tests getting the correct object class based on object type and ID",
        "category": "core"
    },
    "tests.test_angles.AngleTests.test_norm": {
        "name": "Angle Normalization",
        "description": "Tests normalization of angles to the range 0-360 degrees",
        "category": "core"
    },
    "tests.test_angles.AngleTests.test_znorm": {
        "name": "Angle Z-Normalization",
        "description": "Tests z-normalization of angles to the range -180 to +180 degrees",
        "category": "core"
    },
    "tests.test_angles.AngleTests.test_distances": {
        "name": "Angle Distances",
        "description": "Tests calculation of distances between angles in counter-clockwise direction",
        "category": "core"
    },
    "tests.test_angles.AngleTests.test_closest_distances": {
        "name": "Closest Angle Distances",
        "description": "Tests calculation of closest distances between two angles",
        "category": "core"
    },

    "tests.caching.test_comprehensive.TestCaching.test_reference_data_caching": {
        "name": "Reference Data Caching",
        "description": "Tests caching of reference data like sign lords and nakshatras",
        "category": "caching"
    },
    "tests.caching.test_comprehensive.TestCaching.test_calculation_caching": {
        "name": "Calculation Caching",
        "description": "Tests caching of calculation functions like divisional charts",
        "category": "caching"
    },
    "tests.caching.test_comprehensive.TestCaching.test_ephemeris_caching": {
        "name": "Ephemeris Caching",
        "description": "Tests caching of ephemeris calculations",
        "category": "caching"
    },
    "tests.caching.test_comprehensive.TestCaching.test_cache_config": {
        "name": "Cache Configuration",
        "description": "Tests the cache configuration class for enabling/disabling caching and setting cache sizes",
        "category": "caching"
    },
    "tests.caching.test_comprehensive.TestCaching.test_cache_invalidation": {
        "name": "Cache Invalidation",
        "description": "Tests cache invalidation to ensure caches can be properly cleared",
        "category": "caching"
    },
    "tests.caching.test_comprehensive.TestCaching.test_real_world_scenario": {
        "name": "Real-world Caching Scenario",
        "description": "Tests caching in a real-world scenario with chart calculations",
        "category": "caching"
    },
    "tests.caching.test_calculation_cache.test_correctness": {
        "name": "Calculation Cache Correctness",
        "description": "Tests that cached calculation functions produce the same results as original functions",
        "category": "caching"
    },
    "tests.caching.test_calculation_cache.test_performance": {
        "name": "Calculation Cache Performance",
        "description": "Tests the performance improvement of cached calculation functions",
        "category": "caching"
    },
    "tests.caching.test_calculation_cache.test_cache_config": {
        "name": "Calculation Cache Config",
        "description": "Tests the cache configuration for calculation functions",
        "category": "caching"
    },
    "tests.caching.test_reference_data_cache.test_correctness": {
        "name": "Reference Data Cache Correctness",
        "description": "Tests that cached reference data functions produce the same results as original functions",
        "category": "caching"
    },
    "tests.caching.test_reference_data_cache.test_performance": {
        "name": "Reference Data Cache Performance",
        "description": "Tests the performance improvement of cached reference data functions",
        "category": "caching"
    },
    "tests.caching.test_ephemeris_cache.test_correctness": {
        "name": "Ephemeris Cache Correctness",
        "description": "Tests that cached ephemeris functions produce the same results as original functions",
        "category": "caching"
    },
    "tests.caching.test_ephemeris_cache.test_performance": {
        "name": "Ephemeris Cache Performance",
        "description": "Tests the performance improvement of cached ephemeris functions",
        "category": "caching"
    },
    "tests.caching.test_ephemeris_cache.test_cache_config": {
        "name": "Ephemeris Cache Config",
        "description": "Tests the cache configuration for ephemeris functions",
        "category": "caching"
    },
    "tests.test_caching.TestCaching.test_reference_data_correctness": {
        "name": "Reference Data Caching Correctness",
        "description": "Tests that cached reference data functions produce the same results as original functions",
        "category": "caching"
    },
    "tests.test_caching.TestCaching.test_calculation_correctness": {
        "name": "Calculation Caching Correctness",
        "description": "Tests that cached calculation functions produce the same results as original functions",
        "category": "caching"
    },
    "tests.test_caching.TestCaching.test_calculation_performance": {
        "name": "Calculation Caching Performance",
        "description": "Tests the performance improvement of cached calculation functions",
        "category": "caching"
    },

    "tests.test_divisional_charts.TestDivisionalCharts.test_d1_chart": {
        "name": "D1 Chart Calculation",
        "description": "Tests calculation of D1 (Rashi) chart and verifies it matches the birth chart",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d9_chart": {
        "name": "D9 Chart Calculation",
        "description": "Tests calculation of D9 (Navamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d2_chart": {
        "name": "D2 Chart Calculation",
        "description": "Tests calculation of D2 (Hora) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d3_chart": {
        "name": "D3 Chart Calculation",
        "description": "Tests calculation of D3 (Drekkana) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d4_chart": {
        "name": "D4 Chart Calculation",
        "description": "Tests calculation of D4 (Chaturthamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d7_chart": {
        "name": "D7 Chart Calculation",
        "description": "Tests calculation of D7 (Saptamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d10_chart": {
        "name": "D10 Chart Calculation",
        "description": "Tests calculation of D10 (Dashamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d12_chart": {
        "name": "D12 Chart Calculation",
        "description": "Tests calculation of D12 (Dwadashamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d16_chart": {
        "name": "D16 Chart Calculation",
        "description": "Tests calculation of D16 (Shodashamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d20_chart": {
        "name": "D20 Chart Calculation",
        "description": "Tests calculation of D20 (Vimshamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d24_chart": {
        "name": "D24 Chart Calculation",
        "description": "Tests calculation of D24 (Chaturvimshamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d27_chart": {
        "name": "D27 Chart Calculation",
        "description": "Tests calculation of D27 (Nakshatramsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d30_chart": {
        "name": "D30 Chart Calculation",
        "description": "Tests calculation of D30 (Trimshamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d40_chart": {
        "name": "D40 Chart Calculation",
        "description": "Tests calculation of D40 (Khavedamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d45_chart": {
        "name": "D45 Chart Calculation",
        "description": "Tests calculation of D45 (Akshavedamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_d60_chart": {
        "name": "D60 Chart Calculation",
        "description": "Tests calculation of D60 (Shashtyamsha) chart and verifies correct planet positions",
        "category": "vedic"
    },

    "tests.test_yogas.TestYogas.test_get_all_yogas": {
        "name": "Get All Yogas",
        "description": "Tests the function to get all yogas (planetary combinations) in a chart",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_mahapurusha_yogas": {
        "name": "Mahapurusha Yogas",
        "description": "Tests detection of Mahapurusha yogas (combinations that create great personalities)",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_raja_yogas": {
        "name": "Raja Yogas",
        "description": "Tests detection of Raja yogas (combinations that create power and authority)",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_dhana_yogas": {
        "name": "Dhana Yogas",
        "description": "Tests detection of Dhana yogas (combinations that create wealth)",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_nabhasa_yogas": {
        "name": "Nabhasa Yogas",
        "description": "Tests detection of Nabhasa yogas (special planetary patterns)",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_dosha_yogas": {
        "name": "Dosha Yogas",
        "description": "Tests detection of Dosha yogas (combinations that create challenges)",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_chandra_yogas": {
        "name": "Chandra Yogas",
        "description": "Tests detection of Chandra yogas (combinations involving the Moon)",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_yoga_analysis": {
        "name": "Yoga Analysis",
        "description": "Tests analysis of yogas to determine their overall impact",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_yoga_predictions": {
        "name": "Yoga Predictions",
        "description": "Tests generation of predictions based on yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yogas.TestYogas.test_yoga_compatibility": {
        "name": "Yoga Compatibility",
        "description": "Tests compatibility analysis based on yogas in two charts",
        "category": "vedic"
    },

    "tests.test_vimshottari_dasha.TestVimshottariDasha.test_dasha_balance": {
        "name": "Dasha Balance Calculation",
        "description": "Tests calculation of dasha balance at birth based on Moon's position",
        "category": "vedic"
    },
    "tests.test_vimshottari_dasha.TestVimshottariDasha.test_mahadasha_sequence": {
        "name": "Mahadasha Sequence",
        "description": "Tests generation of the Mahadasha (major period) sequence",
        "category": "vedic"
    },
    "tests.test_vimshottari_dasha.TestVimshottariDasha.test_antardasha_sequence": {
        "name": "Antardasha Sequence",
        "description": "Tests generation of the Antardasha (sub-period) sequence",
        "category": "vedic"
    },
    "tests.test_vimshottari_dasha.TestVimshottariDasha.test_pratyantardasha_sequence": {
        "name": "Pratyantardasha Sequence",
        "description": "Tests generation of the Pratyantardasha (sub-sub-period) sequence",
        "category": "vedic"
    },
    "tests.test_vimshottari_dasha.TestVimshottariDasha.test_dasha_periods": {
        "name": "Dasha Periods Calculation",
        "description": "Tests calculation of all dasha periods with start and end dates",
        "category": "vedic"
    },
    "tests.test_vimshottari_dasha.TestVimshottariDasha.test_current_dasha": {
        "name": "Current Dasha Determination",
        "description": "Tests determination of the current operating dasha for a given date",
        "category": "vedic"
    },

    "tests.test_ashtakavarga.TestAshtakavarga.test_bhinnashtakavarga": {
        "name": "Bhinnashtakavarga Calculation",
        "description": "Tests calculation of Bhinnashtakavarga (individual planet strength)",
        "category": "vedic"
    },
    "tests.test_ashtakavarga.TestAshtakavarga.test_sarvashtakavarga": {
        "name": "Sarvashtakavarga Calculation",
        "description": "Tests calculation of Sarvashtakavarga (combined planet strength)",
        "category": "vedic"
    },
    "tests.test_ashtakavarga.TestAshtakavarga.test_trikona_sodhana": {
        "name": "Trikona Sodhana",
        "description": "Tests Trikona Sodhana (reduction) of Sarvashtakavarga",
        "category": "vedic"
    },
    "tests.test_ashtakavarga.TestAshtakavarga.test_ekadhi_sodhana": {
        "name": "Ekadhi Sodhana",
        "description": "Tests Ekadhi Sodhana (reduction) of Sarvashtakavarga",
        "category": "vedic"
    },
    "tests.test_ashtakavarga.TestAshtakavarga.test_kaksha_bala": {
        "name": "Kaksha Bala",
        "description": "Tests calculation of Kaksha Bala (divisional strength)",
        "category": "vedic"
    },
    "tests.test_ashtakavarga.TestAshtakavarga.test_transit_ashtakavarga": {
        "name": "Transit Ashtakavarga",
        "description": "Tests calculation of Ashtakavarga for transit analysis",
        "category": "vedic"
    },

    "tests.test_compatibility.TestCompatibility.test_kuta_calculations": {
        "name": "Kuta Calculations",
        "description": "Tests calculation of Kuta points for compatibility analysis",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_dosha_analysis": {
        "name": "Dosha Analysis",
        "description": "Tests analysis of doshas (afflictions) for compatibility",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_dosha_cancellation": {
        "name": "Dosha Cancellation",
        "description": "Tests cancellation of doshas based on other chart factors",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_dasha_compatibility": {
        "name": "Dasha Compatibility",
        "description": "Tests compatibility analysis based on dasha periods",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_navamsa_compatibility": {
        "name": "Navamsa Compatibility",
        "description": "Tests compatibility analysis based on navamsa (D9) charts",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_overall_compatibility": {
        "name": "Overall Compatibility",
        "description": "Tests overall compatibility analysis combining all factors",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_basic_compatibility": {
        "name": "Basic Compatibility",
        "description": "Tests basic compatibility calculations between two charts",
        "category": "compatibility"
    },
    "tests.test_compatibility.TestCompatibility.test_detailed_compatibility": {
        "name": "Detailed Compatibility",
        "description": "Tests detailed compatibility report generation",
        "category": "compatibility"
    },

    "tests.examples.test_reference_date.main": {
        "name": "Reference Date Test",
        "description": "Tests planetary positions for the reference date (April 9, 2025 at 20:51 in Bangalore)",
        "category": "examples"
    },

    "tests.test_error_handling.ErrorHandlingTests.test_chart_creation_with_invalid_object": {
        "name": "Chart Creation with Invalid Object",
        "description": "Tests that Chart creation handles invalid objects gracefully",
        "category": "error_handling"
    },
    "tests.test_error_handling.ErrorHandlingTests.test_chart_creation_with_invalid_date": {
        "name": "Chart Creation with Invalid Date",
        "description": "Tests that Chart creation handles invalid dates gracefully",
        "category": "error_handling"
    },
    "tests.test_error_handling.ErrorHandlingTests.test_chart_creation_with_invalid_location": {
        "name": "Chart Creation with Invalid Location",
        "description": "Tests that Chart creation handles invalid locations gracefully",
        "category": "error_handling"
    },
    "tests.test_error_handling.ErrorHandlingTests.test_object_creation_with_missing_attributes": {
        "name": "Object Creation with Missing Attributes",
        "description": "Tests that object creation handles missing attributes gracefully",
        "category": "error_handling"
    },
    "tests.test_error_handling.ErrorHandlingTests.test_calculation_with_invalid_input": {
        "name": "Calculation with Invalid Input",
        "description": "Tests that calculations handle invalid input gracefully",
        "category": "error_handling"
    },

    "tests.test_sarvatobhadra.TestSarvatobhadra.test_get_sarvatobhadra_chakra": {
        "name": "Get Sarvatobhadra Chakra",
        "description": "Tests creation of the Sarvatobhadra Chakra (directional chart)",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra.TestSarvatobhadra.test_get_chakra_cell": {
        "name": "Get Chakra Cell",
        "description": "Tests retrieval of a specific cell from the Sarvatobhadra Chakra",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra.TestSarvatobhadra.test_get_direction_quality": {
        "name": "Get Direction Quality",
        "description": "Tests determination of the quality of a direction in the Sarvatobhadra Chakra",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra.TestSarvatobhadra.test_get_sarvatobhadra_compatibility": {
        "name": "Get Sarvatobhadra Compatibility",
        "description": "Tests compatibility analysis based on the Sarvatobhadra Chakra",
        "category": "compatibility"
    },

    "tests.test_vedic_transits.TestVedicTransits.test_get_transit_compatibility": {
        "name": "Get Transit Compatibility",
        "description": "Tests compatibility analysis between transit and natal charts",
        "category": "compatibility"
    },

    "tests.test_error_handling.ErrorHandlingTests.test_getObject_handles_exception": {
        "name": "GetObject Handles Exception",
        "description": "Tests that getObject method handles exceptions from sweObject gracefully",
        "category": "error_handling"
    },
    "tests.test_error_handling.ErrorHandlingTests.test_getObject_handles_syzygy_exception": {
        "name": "GetObject Handles Syzygy Exception",
        "description": "Tests that getObject method handles exceptions when calculating Syzygy",
        "category": "error_handling"
    },
    "tests.test_error_handling.ErrorHandlingTests.test_get_object_handles_exception": {
        "name": "Get Object Handles Exception",
        "description": "Tests that get_object function handles exceptions from swe_object gracefully",
        "category": "error_handling"
    },
    "tests.test_yogas.TestYogas.test_yoga_strength_score": {
        "name": "Yoga Strength Score",
        "description": "Tests calculation of yoga strength scores to determine their potency",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_all_varga_types": {
        "name": "All Varga Types",
        "description": "Tests that all varga (divisional chart) types can be calculated correctly",
        "category": "vedic"
    },
    "tests.test_divisional_charts.TestDivisionalCharts.test_varga_longitude_function": {
        "name": "Varga Longitude Function",
        "description": "Tests the get_varga_longitude function for calculating divisional chart positions",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_house_distance": {
        "name": "House Distance Calculation",
        "description": "Tests calculation of house distances for Vedic aspects",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_graha_drishti": {
        "name": "Graha Drishti",
        "description": "Tests Graha Drishti (planetary aspect) calculations",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_graha_drishti_strength": {
        "name": "Graha Drishti Strength",
        "description": "Tests calculation of Graha Drishti strength",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_rashi_drishti": {
        "name": "Rashi Drishti",
        "description": "Tests Rashi Drishti (sign aspect) calculations",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_rashi_drishti_strength": {
        "name": "Rashi Drishti Strength",
        "description": "Tests calculation of Rashi Drishti strength",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_planet_aspects": {
        "name": "Planet Aspects",
        "description": "Tests getting all aspects cast by a planet",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_planet_aspects_received": {
        "name": "Planet Aspects Received",
        "description": "Tests getting all aspects received by a planet",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_sign_aspects": {
        "name": "Sign Aspects",
        "description": "Tests getting all aspects cast by a sign",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_sign_aspects_received": {
        "name": "Sign Aspects Received",
        "description": "Tests getting all aspects received by a sign",
        "category": "vedic"
    },
    "tests.test_vedic_aspects.TestVedicAspects.test_all_aspects": {
        "name": "All Aspects",
        "description": "Tests getting all aspects in a chart",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_rulership": {
        "name": "Rulership",
        "description": "Tests Vedic rulership functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_exaltation": {
        "name": "Exaltation",
        "description": "Tests Vedic exaltation functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_debilitation": {
        "name": "Debilitation",
        "description": "Tests Vedic debilitation functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_moolatrikona": {
        "name": "Moolatrikona",
        "description": "Tests Vedic Moolatrikona functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_natural_friendship": {
        "name": "Natural Friendship",
        "description": "Tests Vedic natural friendship functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_temporal_friendship": {
        "name": "Temporal Friendship",
        "description": "Tests Vedic temporal friendship functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_combined_friendship": {
        "name": "Combined Friendship",
        "description": "Tests Vedic combined friendship functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_dignity_score": {
        "name": "Dignity Score",
        "description": "Tests Vedic dignity score functions",
        "category": "vedic"
    },
    "tests.test_vedic_dignities.TestVedicDignities.test_dignity_name": {
        "name": "Dignity Name",
        "description": "Tests Vedic dignity name functions",
        "category": "vedic"
    },
    "tests.test_varga_calculations.TestVargaCalculations.test_hora_calculation": {
        "name": "Hora Calculation",
        "description": "Tests D2 (Hora) calculation logic against standard definitions",
        "category": "vedic"
    },
    "tests.test_varga_calculations.TestVargaCalculations.test_drekkana_calculation": {
        "name": "Drekkana Calculation",
        "description": "Tests D3 (Drekkana) calculation logic against standard definitions",
        "category": "vedic"
    },
    "tests.test_varga_calculations.TestVargaCalculations.test_navamsha_calculation": {
        "name": "Navamsha Calculation",
        "description": "Tests D9 (Navamsha) calculation logic against standard definitions",
        "category": "vedic"
    },
    "tests.test_varga_calculations.TestVargaCalculations.test_trimshamsha_calculation": {
        "name": "Trimshamsha Calculation",
        "description": "Tests D30 (Trimshamsha) calculation logic against standard definitions",
        "category": "vedic"
    },
    "tests.test_varga_calculations.TestVargaCalculations.test_shashtiamsha_calculation": {
        "name": "Shashtiamsha Calculation",
        "description": "Tests D60 (Shashtiamsha) calculation logic against standard definitions",
        "category": "vedic"
    },
    "tests.test_vedic_object.TestVedicObject.test_vedic_body_creation": {
        "name": "Vedic Body Creation",
        "description": "Tests VedicBody object creation and initialization",
        "category": "vedic"
    },
    "tests.test_vedic_object.TestVedicObject.test_vedic_body_methods": {
        "name": "Vedic Body Methods",
        "description": "Tests VedicBody object methods and functionality",
        "category": "vedic"
    },
    "tests.test_vedic_object.TestVedicObject.test_to_vedic_object": {
        "name": "To Vedic Object",
        "description": "Tests conversion of regular objects to VedicBody objects",
        "category": "vedic"
    },
    "tests.test_vedic_object.TestVedicObject.test_to_vedic_chart": {
        "name": "To Vedic Chart",
        "description": "Tests conversion of regular charts to charts with VedicBody objects",
        "category": "vedic"
    },
    "tests.vedic.jaimini.test_karakas.TestCharaKarakas.test_standard_calculation": {
        "name": "Jaimini Chara Karakas - Standard Calculation",
        "description": "Tests standard calculation of Jaimini Chara Karakas using specific longitudes.",
        "category": "vedic"
    },
    "tests.vedic.jaimini.test_karakas.TestCharaKarakas.test_tie_breaking": {
        "name": "Jaimini Chara Karakas - Tie Breaking",
        "description": "Tests tie-breaking logic for Chara Karakas based on full longitude.",
        "category": "vedic"
    },

    "tests.test_upagrah.TestUpagrah.test_calculate_gulika": {
        "name": "Calculate Gulika",
        "description": "Tests calculation of Gulika position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_calculate_mandi": {
        "name": "Calculate Mandi",
        "description": "Tests calculation of Mandi position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_calculate_dhuma": {
        "name": "Calculate Dhuma",
        "description": "Tests calculation of Dhuma position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_calculate_vyatipata": {
        "name": "Calculate Vyatipata",
        "description": "Tests calculation of Vyatipata position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_calculate_parivesha": {
        "name": "Calculate Parivesha",
        "description": "Tests calculation of Parivesha position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_calculate_indrachapa": {
        "name": "Calculate Indrachapa",
        "description": "Tests calculation of Indrachapa position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_calculate_upaketu": {
        "name": "Calculate Upaketu",
        "description": "Tests calculation of Upaketu position",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_get_upagrah": {
        "name": "Get Upagrah",
        "description": "Tests getting a specific Upagrah (shadow planet)",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_get_upagrah_positions": {
        "name": "Get Upagrah Positions",
        "description": "Tests getting all Upagrah positions from a chart",
        "category": "vedic"
    },
    "tests.test_upagrah.TestUpagrah.test_relationship_between_upagrah": {
        "name": "Relationship Between Upagrah",
        "description": "Tests the mathematical relationships between different Upagrah",
        "category": "vedic"
    },

    "tests.test_kp.TestKP.test_get_kp_sublord": {
        "name": "Get KP Sublord",
        "description": "Tests calculation of KP sublord based on Vimshottari Dasha periods",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_sub_sublord": {
        "name": "Get KP Sub-Sublord",
        "description": "Tests calculation of KP sub-sublord",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_pointer": {
        "name": "Get KP Pointer",
        "description": "Tests generation of KP pointer in the format: Sign Lord-Star Lord-Sub Lord-Sub Sub Lord",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_lords": {
        "name": "Get KP Lords",
        "description": "Tests getting sign lord, star lord, sub lord, and sub-sub lord for KP astrology",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_planets": {
        "name": "Get KP Planets",
        "description": "Tests getting KP information for all planets in a chart",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_houses": {
        "name": "Get KP Houses",
        "description": "Tests getting KP information for all houses in a chart",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_significators": {
        "name": "Get KP Significators",
        "description": "Tests getting KP significators for houses",
        "category": "vedic"
    },
    "tests.test_kp.TestKP.test_get_kp_ruling_planets": {
        "name": "Get KP Ruling Planets",
        "description": "Tests getting KP ruling planets at a given time",
        "category": "vedic"
    },

    "tests.test_muhurta_core.TestMuhurtaCore.test_get_muhurta_quality": {
        "name": "Get Muhurta Quality",
        "description": "Tests calculation of Muhurta quality based on Panchanga and planetary positions",
        "category": "vedic"
    },
    "tests.test_muhurta_core.TestMuhurtaCore.test_get_best_muhurta": {
        "name": "Get Best Muhurta",
        "description": "Tests finding the best Muhurta within a date range",
        "category": "vedic"
    },
    "tests.test_muhurta_core.TestMuhurtaCore.test_get_auspicious_times": {
        "name": "Get Auspicious Times",
        "description": "Tests finding auspicious time periods within a date range",
        "category": "vedic"
    },
    "tests.test_muhurta_core.TestMuhurtaCore.test_get_inauspicious_times": {
        "name": "Get Inauspicious Times",
        "description": "Tests finding inauspicious time periods within a date range",
        "category": "vedic"
    },
    "tests.test_muhurta_core.TestMuhurtaCore.test_get_house_number": {
        "name": "Get House Number",
        "description": "Tests getting the house number of a planet",
        "category": "vedic"
    },
    "tests.test_muhurta_core.TestMuhurtaCore.test_is_lagna_strong": {
        "name": "Is Lagna Strong",
        "description": "Tests checking if the Lagna (Ascendant) is strong",
        "category": "vedic"
    },

    "tests.test_sarvatobhadra_core.TestSarvatobhadraCore.test_get_sarvatobhadra_chakra": {
        "name": "Get Sarvatobhadra Chakra",
        "description": "Tests creation of Sarvatobhadra Chakra based on chart",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra_core.TestSarvatobhadraCore.test_get_chakra_quality": {
        "name": "Get Chakra Quality",
        "description": "Tests calculation of Sarvatobhadra Chakra quality",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra_core.TestSarvatobhadraCore.test_get_auspicious_directions": {
        "name": "Get Auspicious Directions",
        "description": "Tests finding auspicious directions from Sarvatobhadra Chakra",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra_core.TestSarvatobhadraCore.test_get_inauspicious_directions": {
        "name": "Get Inauspicious Directions",
        "description": "Tests finding inauspicious directions from Sarvatobhadra Chakra",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra_core.TestSarvatobhadraCore.test_is_auspicious_position": {
        "name": "Is Auspicious Position",
        "description": "Tests checking if a position in the Sarvatobhadra Chakra is auspicious",
        "category": "vedic"
    },
    "tests.test_sarvatobhadra_core.TestSarvatobhadraCore.test_is_inauspicious_position": {
        "name": "Is Inauspicious Position",
        "description": "Tests checking if a position in the Sarvatobhadra Chakra is inauspicious",
        "category": "vedic"
    },

    "tests.test_compatibility_core.TestCompatibilityCore.test_get_compatibility_score": {
        "name": "Get Compatibility Score",
        "description": "Tests calculation of compatibility score between two charts",
        "category": "vedic"
    },
    "tests.test_compatibility_core.TestCompatibilityCore.test_get_compatibility_factors": {
        "name": "Get Compatibility Factors",
        "description": "Tests identification of compatibility factors between two charts",
        "category": "vedic"
    },
    "tests.test_compatibility_core.TestCompatibilityCore.test_get_compatibility_description": {
        "name": "Get Compatibility Description",
        "description": "Tests generation of compatibility description between two charts",
        "category": "vedic"
    },
    "tests.test_compatibility_core.TestCompatibilityCore.test_get_compatibility_report": {
        "name": "Get Compatibility Report",
        "description": "Tests generation of detailed compatibility report between two charts",
        "category": "vedic"
    },
    "tests.test_compatibility_core.TestCompatibilityCore.test_get_compatibility_level": {
        "name": "Get Compatibility Level",
        "description": "Tests determination of compatibility level based on score",
        "category": "vedic"
    },

    "tests.test_kuta.TestKuta.test_get_varna_kuta": {
        "name": "Get Varna Kuta",
        "description": "Tests calculation of Varna (caste/class) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_vashya_kuta": {
        "name": "Get Vashya Kuta",
        "description": "Tests calculation of Vashya (dominance) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_tara_kuta": {
        "name": "Get Tara Kuta",
        "description": "Tests calculation of Tara (birth star) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_yoni_kuta": {
        "name": "Get Yoni Kuta",
        "description": "Tests calculation of Yoni (animal nature) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_graha_maitri_kuta": {
        "name": "Get Graha Maitri Kuta",
        "description": "Tests calculation of Graha Maitri (planetary friendship) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_gana_kuta": {
        "name": "Get Gana Kuta",
        "description": "Tests calculation of Gana (temperament) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_bhakoot_kuta": {
        "name": "Get Bhakoot Kuta",
        "description": "Tests calculation of Bhakoot (house position) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_nadi_kuta": {
        "name": "Get Nadi Kuta",
        "description": "Tests calculation of Nadi (pulse/constitution) compatibility",
        "category": "vedic"
    },
    "tests.test_kuta.TestKuta.test_get_total_kuta_score": {
        "name": "Get Total Kuta Score",
        "description": "Tests calculation of total Kuta score",
        "category": "vedic"
    },

    "tests.test_transit_core.TestTransitCore.test_get_transit_chart": {
        "name": "Get Transit Chart",
        "description": "Tests creation of transit chart based on natal chart and transit date",
        "category": "vedic"
    },
    "tests.test_transit_core.TestTransitCore.test_get_transit_planets": {
        "name": "Get Transit Planets",
        "description": "Tests calculation of transit planet positions relative to natal chart",
        "category": "vedic"
    },
    "tests.test_transit_core.TestTransitCore.test_get_transit_aspects": {
        "name": "Get Transit Aspects",
        "description": "Tests calculation of aspects between transit and natal planets",
        "category": "vedic"
    },
    "tests.test_transit_core.TestTransitCore.test_get_transit_houses": {
        "name": "Get Transit Houses",
        "description": "Tests calculation of transit house positions relative to natal chart",
        "category": "vedic"
    },
    "tests.test_transit_core.TestTransitCore.test_get_transit_quality": {
        "name": "Get Transit Quality",
        "description": "Tests assessment of overall transit quality",
        "category": "vedic"
    },
    "tests.test_transit_core.TestTransitCore.test_get_house_number": {
        "name": "Get House Number",
        "description": "Tests calculation of house number for a specific longitude in a chart",
        "category": "vedic"
    },

    "tests.test_transit_predictions.TestTransitPredictions.test_get_transit_predictions": {
        "name": "Get Transit Predictions",
        "description": "Tests generation of predictions based on transits",
        "category": "vedic"
    },
    "tests.test_transit_predictions.TestTransitPredictions.test_get_transit_timeline": {
        "name": "Get Transit Timeline",
        "description": "Tests generation of timeline of transit events for a specific period",
        "category": "vedic"
    },
    "tests.test_transit_predictions.TestTransitPredictions.test_get_transit_events": {
        "name": "Get Transit Events",
        "description": "Tests identification of significant transit events for a specific period",
        "category": "vedic"
    },
    "tests.test_transit_predictions.TestTransitPredictions.test_get_transit_periods": {
        "name": "Get Transit Periods",
        "description": "Tests identification of transit periods with different qualities",
        "category": "vedic"
    },

    "tests.test_yoga_core.TestYogaCore.test_get_yoga_strength": {
        "name": "Get Yoga Strength",
        "description": "Tests calculation of yoga strength based on planetary positions",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_get_yoga_effects": {
        "name": "Get Yoga Effects",
        "description": "Tests generation of yoga effects based on yoga type and strength",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_get_strongest_yoga": {
        "name": "Get Strongest Yoga",
        "description": "Tests identification of the strongest yoga in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_is_in_own_sign": {
        "name": "Is In Own Sign",
        "description": "Tests identification of planets in their own signs",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_is_exalted": {
        "name": "Is Exalted",
        "description": "Tests identification of planets in their exaltation signs",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_is_debilitated": {
        "name": "Is Debilitated",
        "description": "Tests identification of planets in their debilitation signs",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_get_house_lord": {
        "name": "Get House Lord",
        "description": "Tests identification of the lord of a house",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_get_house_number": {
        "name": "Get House Number",
        "description": "Tests calculation of the house number of a planet",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_are_planets_conjunct": {
        "name": "Are Planets Conjunct",
        "description": "Tests identification of conjunctions between planets",
        "category": "vedic"
    },
    "tests.test_yoga_core.TestYogaCore.test_are_planets_in_aspect": {
        "name": "Are Planets In Aspect",
        "description": "Tests identification of aspects between planets",
        "category": "vedic"
    },

    "tests.test_yoga_types.TestYogaTypes.test_get_mahapurusha_yogas": {
        "name": "Get Mahapurusha Yogas",
        "description": "Tests identification of Pancha Mahapurusha yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_types.TestYogaTypes.test_get_raja_yogas": {
        "name": "Get Raja Yogas",
        "description": "Tests identification of Raja yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_types.TestYogaTypes.test_get_dhana_yogas": {
        "name": "Get Dhana Yogas",
        "description": "Tests identification of Dhana yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_types.TestYogaTypes.test_get_all_yogas": {
        "name": "Get All Yogas",
        "description": "Tests identification of all yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_types.TestYogaTypes.test_get_yoga_analysis": {
        "name": "Get Yoga Analysis",
        "description": "Tests analysis of yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_types.TestYogaTypes.test_get_yoga_predictions": {
        "name": "Get Yoga Predictions",
        "description": "Tests generation of predictions based on yogas in a chart",
        "category": "vedic"
    },
    "tests.test_yoga_types.TestYogaTypes.test_get_yoga_strength_score": {
        "name": "Get Yoga Strength Score",
        "description": "Tests calculation of overall yoga strength score for a chart",
        "category": "vedic"
    }
}